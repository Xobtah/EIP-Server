{
	"info": {
		"name": "EIP-Server",
		"_postman_id": "7755568a-18e8-e52e-be65-0a06db916e90",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Register new user w/out all info",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "164f3f21-1512-40e6-a60a-76bf1a027e89",
						"type": "text/javascript",
						"exec": [
							"pm.test('Status code is 403', function () {",
							"    //pm.response.to.have.status(500);",
							"    pm.expect(pm.response.code).to.be.equal(403);",
							"});",
							"",
							"pm.test('Correct response error', function () {",
							"    pm.expect(JSON.parse(responseBody).success).to.be.equal(false);",
							"});",
							"",
							"pm.test('Success is false', function () {",
							"    pm.expect(JSON.parse(responseBody).success).to.be.equal(false);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"Notch\",\n\t\"password\": \"ididnotcreateminecraft\"\n}"
				},
				"url": {
					"raw": "149.202.41.22:8080/api/user",
					"host": [
						"149",
						"202",
						"41",
						"22"
					],
					"port": "8080",
					"path": [
						"api",
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register new user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "79a6d946-76d6-4a5e-bb45-81ee1b9fb7fa",
						"type": "text/javascript",
						"exec": [
							"pm.test('Status code is 200', function () {",
							"    pm.expect(pm.response.code).to.be.equal(200);",
							"});",
							"",
							"pm.test('Correct response error', function () {",
							"    pm.expect(JSON.parse(responseBody).message).to.be.equal('User Markus Person has been inserted');",
							"});",
							"",
							"pm.test('Success is true', function () {",
							"    pm.expect(JSON.parse(responseBody).success).to.be.equal(true);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"Notch\",\n\t\"password\": \"ididnotcreateminecraft\",\n\t\"firstName\": \"Markus\",\n\t\"lastName\": \"Person\",\n\t\"birthDate\": \"Sat Feb 10 2018 14:54:40 GMT-0500 (EST)\",\n\t\"email\": \"notch@mojang.com\"\n}"
				},
				"url": {
					"raw": "149.202.41.22:8080/api/user",
					"host": [
						"149",
						"202",
						"41",
						"22"
					],
					"port": "8080",
					"path": [
						"api",
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "496a34b4-0ca7-4042-9795-fe819f533e87",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"//postman.setEnvironmentVariable(\"token\", jsonData.data.token);",
							"pm.globals.set('token', jsonData.data.token);",
							"",
							"pm.test('Status code is 200', function () {",
							"    pm.expect(pm.response.code).to.be.equal(200);",
							"});",
							"",
							"pm.test('Correct response error', function () {",
							"    pm.expect(JSON.parse(responseBody).message).to.be.equal('Logged in');",
							"});",
							"",
							"pm.test('Success is true', function () {",
							"    pm.expect(JSON.parse(responseBody).success).to.be.equal(true);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"Notch\",\n\t\"password\": \"ididnotcreateminecraft\",\n\t\"firstName\": \"Markus\",\n\t\"lastName\": \"Person\",\n\t\"birthDate\": \"Sat Feb 10 2018 14:54:40 GMT-0500 (EST)\",\n\t\"email\": \"notch@mojang.com\"\n}"
				},
				"url": {
					"raw": "149.202.41.22:8080/api/user/login",
					"host": [
						"149",
						"202",
						"41",
						"22"
					],
					"port": "8080",
					"path": [
						"api",
						"user",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Changing user's password w/out correct password",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "59dd05c6-599e-43f1-9bb7-33ec24fd49ef",
						"type": "text/javascript",
						"exec": [
							"postman.setEnvironmentVariable('token', postman.getGlobalVariable('token'));"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "1e540dbf-8f3f-41dc-8203-1348dfa829e9",
						"type": "text/javascript",
						"exec": [
							"pm.test('Status code is 403', function () {",
							"    pm.expect(pm.response.code).to.be.equal(403);",
							"});",
							"",
							"pm.test('Success is false', function () {",
							"    pm.expect(JSON.parse(responseBody).success).to.be.equal(false);",
							"});",
							"",
							"pm.test('Correct response error', function () {",
							"    pm.expect(JSON.parse(responseBody).message).to.be.equal('Incorrect password');",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "token",
						"value": "{{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"password\": \"stillalive\",\n\t\"newPassword\": \"stillalive\"\n}"
				},
				"url": {
					"raw": "149.202.41.22:8080/api/user/password",
					"host": [
						"149",
						"202",
						"41",
						"22"
					],
					"port": "8080",
					"path": [
						"api",
						"user",
						"password"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Changing user's password w/ correct password",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "59dd05c6-599e-43f1-9bb7-33ec24fd49ef",
						"type": "text/javascript",
						"exec": [
							"postman.setEnvironmentVariable('token', postman.getGlobalVariable('token'));"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "491ddbf5-ec55-46b6-a942-90e67068a00f",
						"type": "text/javascript",
						"exec": [
							"pm.test('Status code is 200', function () {",
							"    pm.expect(pm.response.code).to.be.equal(200);",
							"});",
							"",
							"pm.test('Correct response error', function () {",
							"    pm.expect(JSON.parse(responseBody).message).to.be.equal('User Markus Person\\'s password has been updated');",
							"});",
							"",
							"pm.test('Success is true', function () {",
							"    pm.expect(JSON.parse(responseBody).success).to.be.equal(true);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "token",
						"value": "{{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"password\": \"ididnotcreateminecraft\",\n\t\"newPassword\": \"icreatedminecraft\"\n}"
				},
				"url": {
					"raw": "149.202.41.22:8080/api/user/password",
					"host": [
						"149",
						"202",
						"41",
						"22"
					],
					"port": "8080",
					"path": [
						"api",
						"user",
						"password"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Create new post",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "59dd05c6-599e-43f1-9bb7-33ec24fd49ef",
						"type": "text/javascript",
						"exec": [
							"postman.setEnvironmentVariable('token', postman.getGlobalVariable('token'));"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "51cf0175-9356-4ed2-9450-607a6f455076",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.globals.set('postId', jsonData.data._id);",
							"",
							"pm.test('Status code is 200', function () {",
							"    pm.expect(pm.response.code).to.be.equal(200);",
							"});",
							"",
							"pm.test('Good response', function () {",
							"    pm.expect(JSON.parse(responseBody).message).to.be.equal('Post has been inserted');",
							"});",
							"",
							"pm.test('Success is true', function () {",
							"    pm.expect(JSON.parse(responseBody).success).to.be.equal(true);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "token",
						"value": "{{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"content\": \"Hello World from test runner!\"\n}"
				},
				"url": {
					"raw": "149.202.41.22:8080/api/post",
					"host": [
						"149",
						"202",
						"41",
						"22"
					],
					"port": "8080",
					"path": [
						"api",
						"post"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Get created post",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "59dd05c6-599e-43f1-9bb7-33ec24fd49ef",
						"type": "text/javascript",
						"exec": [
							"postman.setEnvironmentVariable('token', postman.getGlobalVariable('token'));"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "8b426c9c-17ca-48d8-8527-68cd97a48c8d",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.test('Status code is 200', function () {",
							"    pm.expect(pm.response.code).to.be.equal(200);",
							"});",
							"",
							"pm.test('Success is true', function () {",
							"    pm.expect(JSON.parse(responseBody).success).to.be.equal(true);",
							"});",
							"",
							"pm.test('Good content', function () {",
							"    pm.expect(JSON.parse(responseBody).data.content).to.be.equal('Hello World from test runner!');",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "token",
						"value": "{{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"content\": \"Hello World from test runner!\"\n}"
				},
				"url": {
					"raw": "149.202.41.22:8080/api/post/{{postId}}",
					"host": [
						"149",
						"202",
						"41",
						"22"
					],
					"port": "8080",
					"path": [
						"api",
						"post",
						"{{postId}}"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Liking a post",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "59dd05c6-599e-43f1-9bb7-33ec24fd49ef",
						"type": "text/javascript",
						"exec": [
							"postman.setEnvironmentVariable('token', postman.getGlobalVariable('token'));"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "386e157d-3d8c-4628-b599-3baef254ba75",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.test('Status code is 200', function () {",
							"    pm.expect(pm.response.code).to.be.equal(200);",
							"});",
							"",
							"pm.test('Success is true', function () {",
							"    pm.expect(JSON.parse(responseBody).success).to.be.equal(true);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "token",
						"value": "{{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n}"
				},
				"url": {
					"raw": "149.202.41.22:8080/api/post/like/{{postId}}",
					"host": [
						"149",
						"202",
						"41",
						"22"
					],
					"port": "8080",
					"path": [
						"api",
						"post",
						"like",
						"{{postId}}"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Liking a post copy",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "59dd05c6-599e-43f1-9bb7-33ec24fd49ef",
						"type": "text/javascript",
						"exec": [
							"postman.setEnvironmentVariable('token', postman.getGlobalVariable('token'));"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "386e157d-3d8c-4628-b599-3baef254ba75",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.test('Status code is 200', function () {",
							"    pm.expect(pm.response.code).to.be.equal(200);",
							"});",
							"",
							"pm.test('Success is true', function () {",
							"    pm.expect(JSON.parse(responseBody).success).to.be.equal(true);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "token",
						"value": "{{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n}"
				},
				"url": {
					"raw": "149.202.41.22:8080/api/post/like/{{postId}}",
					"host": [
						"149",
						"202",
						"41",
						"22"
					],
					"port": "8080",
					"path": [
						"api",
						"post",
						"like",
						"{{postId}}"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Comment on post",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "59dd05c6-599e-43f1-9bb7-33ec24fd49ef",
						"type": "text/javascript",
						"exec": [
							"postman.setEnvironmentVariable('token', postman.getGlobalVariable('token'));"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "68108e49-143f-44be-a688-4057c71d8caa",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.globals.set('commentId', jsonData.data._id);",
							"",
							"pm.test('Status code is 200', function () {",
							"    pm.expect(pm.response.code).to.be.equal(200);",
							"});",
							"",
							"pm.test('Good response', function () {",
							"    pm.expect(JSON.parse(responseBody).message).to.be.equal('Post has been inserted');",
							"});",
							"",
							"pm.test('Success is true', function () {",
							"    pm.expect(JSON.parse(responseBody).success).to.be.equal(true);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "token",
						"value": "{{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"content\": \"Comment from test runner!\",\n\t\"parent\": \"{{postId}}\"\n}"
				},
				"url": {
					"raw": "149.202.41.22:8080/api/post",
					"host": [
						"149",
						"202",
						"41",
						"22"
					],
					"port": "8080",
					"path": [
						"api",
						"post"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Get post comments",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "59dd05c6-599e-43f1-9bb7-33ec24fd49ef",
						"type": "text/javascript",
						"exec": [
							"postman.setEnvironmentVariable('token', postman.getGlobalVariable('token'));"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "e50f9a03-998b-45d5-add8-ce6b3fbd72c9",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.test('Status code is 200', function () {",
							"    pm.expect(pm.response.code).to.be.equal(200);",
							"});",
							"",
							"pm.test('Success is true', function () {",
							"    pm.expect(JSON.parse(responseBody).success).to.be.equal(true);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "token",
						"value": "{{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"content\": \"Comment from test runner!\",\n\t\"parent\": {{postId}}\n}"
				},
				"url": {
					"raw": "149.202.41.22:8080/api/post/comments/{{postId}}",
					"host": [
						"149",
						"202",
						"41",
						"22"
					],
					"port": "8080",
					"path": [
						"api",
						"post",
						"comments",
						"{{postId}}"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Delete post",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "59dd05c6-599e-43f1-9bb7-33ec24fd49ef",
						"type": "text/javascript",
						"exec": [
							"postman.setEnvironmentVariable('token', postman.getGlobalVariable('token'));"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "15118d62-b97d-4164-89c1-eadb29dec638",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.test('Status code is 200', function () {",
							"    pm.expect(pm.response.code).to.be.equal(200);",
							"});",
							"",
							"pm.test('Good response', function () {",
							"    pm.expect(JSON.parse(responseBody).message).to.be.equal('Post has been deleted');",
							"});",
							"",
							"pm.test('Success is true', function () {",
							"    pm.expect(JSON.parse(responseBody).success).to.be.equal(true);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "token",
						"value": "{{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "149.202.41.22:8080/api/post/{{postId}}",
					"host": [
						"149",
						"202",
						"41",
						"22"
					],
					"port": "8080",
					"path": [
						"api",
						"post",
						"{{postId}}"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Add training to user",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "59dd05c6-599e-43f1-9bb7-33ec24fd49ef",
						"type": "text/javascript",
						"exec": [
							"postman.setEnvironmentVariable('token', postman.getGlobalVariable('token'));"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "f36ed4c9-b2d5-4183-85f7-46146d293d1a",
						"type": "text/javascript",
						"exec": [
							"pm.test('Status code is 200', function () {",
							"    pm.expect(pm.response.code).to.be.equal(200);",
							"});",
							"",
							"pm.test('Good response', function () {",
							"    pm.expect(JSON.parse(responseBody).message).to.be.equal('User trainings added');",
							"});",
							"",
							"pm.test('Success is true', function () {",
							"    pm.expect(JSON.parse(responseBody).success).to.be.equal(true);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "token",
						"value": "{{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"id\": [ \"{{postId}}\" ],\n\t\"username\": \"Notch\"\n}"
				},
				"url": {
					"raw": "149.202.41.22:8080/api/user/training",
					"host": [
						"149",
						"202",
						"41",
						"22"
					],
					"port": "8080",
					"path": [
						"api",
						"user",
						"training"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Delete user w/ wrong password",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "4b9897ee-e548-44cd-91b9-e6a926ef3329",
						"type": "text/javascript",
						"exec": [
							"postman.setEnvironmentVariable('token', postman.getGlobalVariable('token'));"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "7d2fead6-2b7d-437e-8fa7-5f3345ce0310",
						"type": "text/javascript",
						"exec": [
							"pm.test('Status code is 403', function () {",
							"    pm.expect(pm.response.code).to.be.equal(403);",
							"});",
							"",
							"pm.test('Correct response error', function () {",
							"    pm.expect(JSON.parse(responseBody).message).to.be.equal('Incorrect password');",
							"});",
							"",
							"pm.test('Success is false', function () {",
							"    pm.expect(JSON.parse(responseBody).success).to.be.equal(false);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "token",
						"value": "{{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"password\": \"ididnotcreateminecraft\"\n}"
				},
				"url": {
					"raw": "149.202.41.22:8080/api/user",
					"host": [
						"149",
						"202",
						"41",
						"22"
					],
					"port": "8080",
					"path": [
						"api",
						"user"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Delete user",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "4b9897ee-e548-44cd-91b9-e6a926ef3329",
						"type": "text/javascript",
						"exec": [
							"postman.setEnvironmentVariable('token', postman.getGlobalVariable('token'));"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "306319fb-99ae-4c89-afb4-11dcf3347a6a",
						"type": "text/javascript",
						"exec": [
							"pm.test('Status code is 200', function () {",
							"    pm.expect(pm.response.code).to.be.equal(200);",
							"});",
							"",
							"pm.test('Correct response error', function () {",
							"    pm.expect(JSON.parse(responseBody).message).to.be.equal('User Markus Person has been deleted');",
							"});",
							"",
							"pm.test('Success is true', function () {",
							"    pm.expect(JSON.parse(responseBody).success).to.be.equal(true);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "token",
						"value": "{{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"password\": \"icreatedminecraft\"\n}"
				},
				"url": {
					"raw": "149.202.41.22:8080/api/user",
					"host": [
						"149",
						"202",
						"41",
						"22"
					],
					"port": "8080",
					"path": [
						"api",
						"user"
					]
				},
				"description": ""
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "3289820d-428b-45a9-8d28-c0e72a64e522",
				"type": "text/javascript",
				"exec": [
					"pm.environment.set('token', null);"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "19d80660-02ee-4b2e-aa5b-f7a32852ce71",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}